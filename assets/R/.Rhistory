install.packages("RColorBrewer") # color palettes
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
text <- readLines(file.choose())
docs <- Corpus(VectorSource(text))
docs
text
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
docs <- tm_map(docs, stemDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
d
head(d, 10)
d[1,]
d <- d[-1, ]
head(d, 10)
d[,1]
d[1,1]
d[1,2]
head(d, 10)
d[1,2] <- 86
head(d, 10)
d[4,2] <- 0
head(d, 10)
d[3,2] <- 58
head(d, 10)
d[6,2] <- 0
head(d, 10)
d[5,2] <- 0
head(d, 10)
d[9,2] <- 46
head(d, 10)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 10,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
head(d, 20)
head(d, 30)
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("can", "may", "also", "within", "available"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 30)
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("will","can", "may", "also", "within", "available"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 30)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
?stemDocument
d[1, 2] <- d[1, 2] + d[4, 2]
d[4, 2] <- 0
d[3, 2] <- d[3, 2] + d[6, 2]
d[6, 2] <- 0
d[5, 2] <- d[5, 2] + d[9, 2]
d[29, 1] <- "Bayesian"
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("will","can", "may", "also", "within", "available"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 30)
d[29, 1]
d[1, 2] <- d[1, 2] + d[4, 2]
d[4, 2] <- 0
d[3, 2] <- d[3, 2] + d[6, 2]
d[6, 2] <- 0
d[5, 2] <- d[5, 2] + d[9, 2]
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
?wordcloud
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"))
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark"), fixed.asp = F)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F)
head(d, 100)
?tm_map
getTransformations()
toBayes <- content_transformer(function(x) gsub("bayesian", "Bayesian", x))
docs <- tm_map(docs, toBayes)
head(d, 100)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 100)
toBayes <- content_transformer(function(x) gsub("bayesian", "Bayesian", x))
docs <- tm_map(docs, toBayes)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 30)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("will","can", "may", "also", "within", "available", "chipman", "qian"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Captial Bayesian
toBayes <- content_transformer(function(x) gsub("bayesian", "Bayesian", x))
docs <- tm_map(docs, toBayes)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 30)
names(v)
names(v) == "bayesian"
sum(names(v) == "bayesian")
which(names(v) == "bayesian")
names(v)[29]
names(v)[29] <- "Bayesian"
d <- data.frame(word = names(v),freq=v)
head(d, 30)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("will","can", "may", "also", "within", "available", "chipman", "qian"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
names(v)[which(names(v) == "bayesian")] <- "Bayesian"
d <- data.frame(word = names(v),freq=v)
head(d, 30)
d[1, 2] <- d[1, 2] + d[4, 2]
d[4, 2] <- 0
d[3, 2] <- d[3, 2] + d[6, 2]
d[6, 2] <- 0
d[5, 2] <- d[5, 2] + d[9, 2]
head(d, 30)
d[1, 2] <- d[1, 2] + d[4, 2]
d[4, 2] <- 0
d[3, 2] <- d[3, 2] + d[6, 2]
d[6, 2] <- 0
d[5, 2] <- d[5, 2] + d[9, 2]
head(d, 30)
d[9, 2] <- 0
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F)
setwd("~/Dropbox/work/webpage/statsdavew.github.io/assets/R")
jpeg(file = "wordcloud.jpeg")
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F)
dev.off()
jpeg(file = "wordcloud.jpeg", width = 1280, height = 300)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F)
dev.off()
install.packages("dlstats")
library("dlstats")
x <- cran_stats(c("acebayes"))
head(x)
x
?cran_stats
x <- cran_stats(c("dlstats", "emojifont", "rvcheck"))
head(x)
x
library(devtools)
install_github("metacran/cranlogs")
library(cranlogs)
y <- cran_downloads(package = "acebayes", from = "2014-01-01", to = "2018-12-31")
y
y$count
sum(y$count)
cran_downloads(package = "acebayes", from = "2018-12-01", to = "2018-12-31")
cran_top_downloads("last-week")
cran_top_downloads()
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F)
?wordcloud
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(4, 2))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(4, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(5, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(6, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(10, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(8, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 2))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
names(v)[which(names(v) == "bayesian")] <- "Bayesian"
names(v)[which(names(v) == "phd")] <- "PhD"
d <- data.frame(word = names(v),freq=v)
head(d, 30)
d[1, 2] <- d[1, 2] + d[4, 2]
d[4, 2] <- 0
d[3, 2] <- d[3, 2] + d[6, 2]
d[6, 2] <- 0
d[5, 2] <- d[5, 2] + d[9, 2]
d[9, 2] <- 0
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
jpeg(file = "wordcloud.jpeg", width = 1280, height = 300)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
dev.off()
d
head(d, 30)
head(d, 50)
head(d, 70)
head(d, 80)
head(d, 90)
head(d, 100)
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("will","can", "may", "also", "within", "available", "chipman", "qian", "pθ", "one", "two", "three"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
names(v)[which(names(v) == "bayesian")] <- "Bayesian"
names(v)[which(names(v) == "phd")] <- "PhD"
d <- data.frame(word = names(v),freq=v)
head(d, 30)
d[1, 2] <- d[1, 2] + d[4, 2]
d[4, 2] <- 0
d[3, 2] <- d[3, 2] + d[6, 2]
d[6, 2] <- 0
d[5, 2] <- d[5, 2] + d[9, 2]
d[9, 2] <- 0
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
jpeg(file = "wordcloud.jpeg", width = 1280, height = 300)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
dev.off()
jpeg(file = "wordcloud.jpeg", width = 1280, height = 300)
wordcloud(words = d$word, freq = d$freq, min.freq = 5,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
dev.off()
wordcloud(words = d$word, freq = d$freq, min.freq = 6,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
text <- readLines("wordcloud_text.txt")
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("will","can", "may", "also", "within", "available", "chipman", "qian", "pθ", "one", "two", "three", "use"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
names(v)[which(names(v) == "bayesian")] <- "Bayesian"
names(v)[which(names(v) == "phd")] <- "PhD"
d <- data.frame(word = names(v),freq=v)
head(d, 30)
d[1, 2] <- d[1, 2] + d[4, 2]
d[4, 2] <- 0
d[3, 2] <- d[3, 2] + d[6, 2]
d[6, 2] <- 0
d[5, 2] <- d[5, 2] + d[9, 2]
d[9, 2] <- 0
wordcloud(words = d$word, freq = d$freq, min.freq = 6,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
wordcloud(words = d$word, freq = d$freq, min.freq = 6,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
jpeg(file = "wordcloud.jpeg", width = 1280, height = 300)
wordcloud(words = d$word, freq = d$freq, min.freq = 6,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"), fixed.asp = F, scale = c(7, 1))
dev.off()
